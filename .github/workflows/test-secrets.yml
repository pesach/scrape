name: Test GitHub Secrets Configuration

# Run this workflow manually to test your secrets
on:
  workflow_dispatch:  # Allows manual trigger
  
jobs:
  test-secrets:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test Configuration Loading
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        B2_ENDPOINT_URL: ${{ secrets.B2_ENDPOINT_URL }}
        REDIS_URL: redis://localhost:6379/0
        ENVIRONMENT: production
      run: |
        echo "üîç Testing GitHub Secrets Configuration..."
        
        # Test config loading
        python -c "
        from config import config
        import sys
        
        print('üìã Configuration Summary:')
        summary = config.get_config_summary()
        for key, value in summary.items():
            print(f'  {key}: {value}')
        
        print('\nüîç Validation Results:')
        is_valid, missing = config.validate()
        if is_valid:
            print('‚úÖ All required configuration present!')
            print('üéâ GitHub Secrets are configured correctly!')
        else:
            print(f'‚ùå Missing configuration: {missing}')
            print('üí° Check your GitHub Repository Secrets')
            sys.exit(1)
        "
    
    - name: Test Database Connection
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        B2_ENDPOINT_URL: ${{ secrets.B2_ENDPOINT_URL }}
        REDIS_URL: redis://localhost:6379/0
        ENVIRONMENT: production
      run: |
        echo "üóÑÔ∏è Testing Supabase Database Connection..."
        python -c "
        from database import db
        print('‚úÖ Database client initialized successfully!')
        print('üîó Supabase connection configured correctly!')
        "
    
    - name: Test Backblaze B2 Configuration
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        B2_ENDPOINT_URL: ${{ secrets.B2_ENDPOINT_URL }}
        REDIS_URL: redis://localhost:6379/0
        ENVIRONMENT: production
      run: |
        echo "‚òÅÔ∏è Testing Backblaze B2 Configuration..."
        python -c "
        from storage import storage
        print('‚úÖ Backblaze B2 client initialized successfully!')
        print('üóÇÔ∏è B2 storage configuration correct!')
        "
    
    - name: Test YouTube Parser
      run: |
        echo "üé¨ Testing YouTube Parser..."
        python -c "
        from youtube_parser import YouTubeURLParser
        
        # Test URL validation
        test_url = 'https://www.youtube.com/watch?v=dQw4w9WgXcQ'
        is_valid = YouTubeURLParser.validate_url(test_url)
        
        if is_valid:
            print('‚úÖ YouTube parser working correctly!')
        else:
            print('‚ùå YouTube parser test failed')
            exit(1)
        "
    
    - name: Final Summary
      run: |
        echo ""
        echo "üéâ SUCCESS! All GitHub Secrets are configured correctly!"
        echo ""
        echo "‚úÖ Configuration loaded successfully"
        echo "‚úÖ Supabase connection ready"
        echo "‚úÖ Backblaze B2 storage ready"
        echo "‚úÖ YouTube parser working"
        echo ""
        echo "üöÄ Your application is ready to deploy!"