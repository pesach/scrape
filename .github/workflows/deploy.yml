name: Deploy YouTube Scraper

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run configuration validation
      env:
        # GitHub Repository Secrets are automatically available as environment variables
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        B2_ENDPOINT_URL: ${{ secrets.B2_ENDPOINT_URL }}
        REDIS_URL: redis://localhost:6379/0
        ENVIRONMENT: production
      run: |
        python -c "from config import config; print('âœ… Configuration loaded successfully')"
    
    - name: Run setup tests
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        B2_ENDPOINT_URL: ${{ secrets.B2_ENDPOINT_URL }}
        REDIS_URL: redis://localhost:6379/0
        ENVIRONMENT: production
      run: |
        python test_setup.py
    
    - name: Test metadata extraction
      run: |
        python simple_demo.py &
        sleep 5
        curl -f http://localhost:8001/health || exit 1
        kill %1

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to server
      env:
        # All secrets are available as environment variables
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        B2_APPLICATION_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
        B2_APPLICATION_KEY: ${{ secrets.B2_APPLICATION_KEY }}
        B2_BUCKET_NAME: ${{ secrets.B2_BUCKET_NAME }}
        B2_ENDPOINT_URL: ${{ secrets.B2_ENDPOINT_URL }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        ENVIRONMENT: production
      run: |
        # Example deployment commands
        echo "ðŸš€ Deploying with GitHub Secrets..."
        echo "Configuration loaded from environment variables"
        
        # Your deployment commands here
        # docker build -t youtube-scraper .
        # docker run -d --env-file <(env) youtube-scraper
        
        echo "âœ… Deployment completed"